#! /bin/sh
ROOT=`readlink -f ..`
if [ x$TARGET != x -a -d "$ROOT/bin/$TARGET/" ]; then
    BINDIR="$ROOT/bin/$TARGET/"
else
    BINDIR="$ROOT/bin/arm-unknown-linux-gnueabihf/"
fi
if [ x$SLAVE_TARGET != x -a -d "$ROOT/bin/$SLAVE_TARGET/" ]; then
    SLAVE_BINDIR="$ROOT/bin/$SLAVE_TARGET/"
else
    SLAVE_BINDIR="$ROOT/bin/epiphany-unknown-elf/"
fi
if [ -c /dev/epiphany -o -d /dev/epiphany ]; then
    PREFIX="env"
    # Loading ELF is significantly faster than loading SREC
    EXT=""
else
    PREFIX="sudo -E LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
    EXT=".srec"
fi

SLAVE_BIN="$SLAVE_BINDIR/slave.debug.smp$EXT"
FAST_SLAVE_BIN="$SLAVE_BINDIR/slave.smp$EXT"

TEST_ERL="$PREFIX SLAVE_BINARY=$SLAVE_BIN BINDIR=$BINDIR"
TEST_ERL="$TEST_ERL $BINDIR/beam.debug.smp -- -root $ROOT -- -noshell"
REGS_ERL="$TEST_ERL -pa beam" # We don't trust the regressions to reproduce with HiPE
TEST_ERL="$TEST_ERL -pa debug"

FAST_ERL="$PREFIX SLAVE_BINARY=$FAST_SLAVE_BIN BINDIR=$BINDIR"
FAST_ERL="$FAST_ERL $BINDIR/beam.smp -- -root $ROOT -- -pa opt -noshell"

ERL="env BINDIR=$BINDIR $BINDIR/beam.smp -- -root $ROOT -- -noshell -pa debug"

NOREGS=0
NOUNIT=0
CONCURRENT=0
while echo $1 | grep -E '^-' >/dev/null; do
    if [ $1 == --fast ]; then
        NOREGS=1
        TEST_ERL=$FAST_ERL
        ERL="$ERL -pa opt"
    elif [ $1 == --nounit ]; then
        NOUNIT=1
    elif [ $1 == --noregs ]; then
        NOREGS=1
    elif [ $1 == --seq ]; then
        CONCURRENT=0
    elif [ $1 == --conc ]; then
        CONCURRENT="conc"
    elif [ $1 == --mods-conc ]; then
        CONCURRENT="mods_conc"
    elif [ $1 == --beam ]; then
        TEST_ERL="$TEST_ERL -pa beam"
        ERL="$ERL -pa beam"
    else
        echo "Unrecognized flag $1"
        exit 1
    fi
    shift
done
TS_MODS="$@"

if [ x$NOUNIT = x0 ]; then
    echo -e "     \e[1m==>\e[0m Running unit:test()"
    $TEST_ERL -eval 'case unit:test() of error -> halt(1); _ -> init:stop() end' || {
        echo "FAILURE"
        exit 1
    }
fi

if [ x$NOREGS = x0 ]; then
    TESTS=`$ERL -s regressions working -s erlang halt`
    for t in $TESTS; do
        sleep 1 # We do what we can to prevent bus lockups, even voodoo like
                # this
        echo -e "     \e[1m-->\e[0m Running regressions:$t()"
        $REGS_ERL -s regressions run $t || {
            echo "FAILURE"
            exit 1
        }
    done
fi

if [ x$CONCURRENT = x0 ]; then
    for m in $TS_MODS; do
        sleep 1 # We do what we can to prevent bus lockups, even voodoo like this
        echo -e "     \e[1m==>\e[0m Running ts_epi:run([$m])"
        $TEST_ERL -s ts_epi run $m || {
            echo "FAILURE"
            exit 1
        }
    done
else
    sleep 1 # We do what we can to prevent bus lockups, even voodoo like this
    echo -ne "     \e[1m==>\e[0m Running ts_epi:run([$CONCURRENT,"
    echo `echo $TS_MODS | sed 's/ /,/g'`"])"
    $TEST_ERL -s ts_epi run $CONCURRENT $TS_MODS || {
        echo "FAILURE"
        exit 1
    }
fi

echo "OK"
